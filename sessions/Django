let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Documents/Training/django
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +6 project/app/urls.py
badd +1 project/app/tests.py
badd +1 project/app/models.py
badd +3 project/app/apps.py
badd +1 ~/.config/nvim/lua/plugins/colorschemes/transparent.lua
badd +90 ~/.config/nvim/lua/plugins/tools/navbuddy.lua
badd +153 ~/.config/nvim/lua/plugins/core/cmp.lua
badd +212 ~/.config/nvim/lua/plugins/lsp/lsp-config.lua
badd +20 ~/.config/nvim/lua/plugins/lsp/mason.lua
badd +25 ~/.config/nvim/lua/plugins/colorschemes/catppuccin.lua
badd +1 ~/.config/nvim/lua/plugins/core/alpha
badd +1 ~/.config/nvim/lua/plugins/core/alpha.lua
badd +8 ~/.config/nvim/lua/config/options.lua
badd +10 ~/.config/nvim/lua/plugins/utility/nvim-spider.lua
badd +1 ~/.config/nvim/lua/config/lazy.lua
badd +53 my_project/app/views.py
badd +1 my_project/app/urls.py
badd +1 project/project/urls.py
badd +26 project/app/views.py
badd +1 /tasks/quick.norg
badd +3 my_project/app/templates/app/challenge.html
badd +34 project/project/settings.py
badd +34 my_project/project/settings.py
argglobal
%argdel
edit my_project/app/templates/app/challenge.html
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 30 + 96) / 192)
exe 'vert 2resize ' . ((&columns * 161 + 96) / 192)
argglobal
enew
file NvimTree_1
balt my_project/app/templates/app/challenge.html
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
wincmd w
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
3,7fold
8,13fold
let &fdl = &fdl
let s:l = 3 - ((2 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3
normal! 03|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 30 + 96) / 192)
exe 'vert 2resize ' . ((&columns * 161 + 96) / 192)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=1
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
